@namespace
class SpriteKind:
    Rescued = SpriteKind.create()

def on_overlap_tile(sprite, location):
    global turkey
    info.change_score_by(-1)
    info.change_life_by(-1)
    tiles.set_tile_at(location, assets.tile("""
        transparency16
    """))
    turkey = sprites.create(img("""
            ...cc...................
                    ..c36cccc...............
                    ..c633336c..............
                    .c33333cc6c.cc..........
                    c33333c55c6c55b.........
                    c33333ff5c6c5ff.........
                    cc3336ff5c6c5ff.........
                    cc6666c553c355b.........
                    c333333c55355b..........
                    c3333ccb55555cc.........
                    .c33c55b4555455c........
                    ..bbc5bb4444b45b........
                    .b54c4555b4b554c........
                    .c5c4c555c4c555c........
                    .c5c4c5555c5555c........
                    .ccc..ccccccccc.........
        """),
        SpriteKind.Rescued)
    turkey.destroy(effects.spray, 9000)
scene.on_overlap_tile(SpriteKind.player,
    assets.tile("""
        myTile0
    """),
    on_overlap_tile)

def on_countdown_end():
    game.over(False, effects.melt)
info.on_countdown_end(on_countdown_end)

def on_a_pressed():
    mySprite.vy = -300
controller.A.on_event(ControllerButtonEvent.PRESSED, on_a_pressed)

def on_overlap_tile2(sprite2, location2):
    info.start_countdown(25.5)
scene.on_overlap_tile(SpriteKind.player,
    assets.tile("""
        myTile1
    """),
    on_overlap_tile2)

def on_overlap_tile3(sprite3, location3):
    music.wawawawaa.play_until_done()
    game.over(False, effects.melt)
scene.on_overlap_tile(SpriteKind.player,
    assets.tile("""
        myTile
    """),
    on_overlap_tile3)

def on_overlap_tile4(sprite4, location4):
    music.magic_wand.play()
    game.over(True, effects.confetti)
scene.on_overlap_tile(SpriteKind.player,
    sprites.swamp.swamp_tile16,
    on_overlap_tile4)

def on_life_zero():
    game.over(False, effects.splatter)
info.on_life_zero(on_life_zero)

def on_overlap_tile5(sprite5, location5):
    global turkey
    info.change_score_by(1)
    tiles.set_tile_at(location5, assets.tile("""
        transparency16
    """))
    turkey = sprites.create(img("""
            ...cc...................
                    ..c36cccc...............
                    ..c633336c..............
                    .c33333cc6c.cc..........
                    c33333c55c6c55b.........
                    c33333ff5c6c5ff.........
                    cc3336ff5c6c5ff.........
                    cc6666c553c355b.........
                    c333333c55355b..........
                    c3333ccb55555cc.........
                    .c33c55b4555455c........
                    ..bbc5bb4444b45b........
                    .b54c4555b4b554c........
                    .c5c4c555c4c555c........
                    .c5c4c5555c5555c........
                    .ccc..ccccccccc.........
        """),
        SpriteKind.Rescued)
    tiles.place_on_tile(turkey, location5)
    turkey.follow(mySprite)
scene.on_overlap_tile(SpriteKind.player,
    assets.tile("""
        tile1
    """),
    on_overlap_tile5)

turkey: Sprite = None
mySprite: Sprite = None
scene.set_background_color(8)
tiles.set_tilemap(tilemap("""
    level1
"""))
mySprite = sprites.create(img("""
        ...cc...................
            ..c36cccc...............
            ..c633336c..............
            .c33333cc6c.cc..........
            c33333c55c6c55b.........
            c33333ff5c6c5ff.........
            cc3336ff5c6c5ff.........
            cc6666c553c355b.........
            c333333c55355b..........
            c3333ccb55555cc.........
            .c33c55b4555455c........
            ..bbc5bb4444b45b........
            .b54c4555b4b554c........
            .c5c4c555c4c555c........
            .c5c4c5555c5555c........
            .ccc..ccccccccc.........
    """),
    SpriteKind.player)
controller.move_sprite(mySprite, 100, 0)
mySprite.ay = 500
scene.camera_follow_sprite(mySprite)
tiles.place_on_random_tile(mySprite, assets.tile("""
    tile3
"""))
info.set_life(5)
info.start_countdown(65)